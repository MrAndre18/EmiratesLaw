// Выпадающий список
mixin drop-down(text, className, elementsList, isMultiple)
  .drop-down__wrapper
    button.drop-down(
      class= className ? className : "",
      class= isMultiple ? 'multiple' : 'single',
      type="button")
      p.drop-down__text= text
      .drop-down__img
        if className
          img.svg(src="@img/svg/arrow-right-thin.svg", alt="")
        else
          img.svg(src="@img/svg/drop-down.svg", alt="")
    if isMultiple
      ul.drop-down__list.first-level
        each element in elementsList
          li.first-level__item(data-currency-code= element.country ? element.country : "")
            .first-level__item-title
              label.first-level__item-label= element.first_level
                input.first-level__item-input(
                  type="checkbox",
                  name= element.name)
              if element.second_level
                label.drop-down__list-select-all Выбрать все
                  input.drop-down__list-select-all-input(
                    type="checkbox",
                    name="select-all")
            if element.second_level
              ul.second-level
                each second_level_element in element.second_level
                  li.second-level__item
                    label.second-level__item-label= second_level_element.text
                      input.second-level__item-input(
                        type="checkbox",
                        name= element.name+"-second-level")
    else
      ul.drop-down__list.first-level
        each element in elementsList
          li.first-level__item(data-currency-code= element.country ? element.country : "")
            .first-level__item-title
              label.first-level__item-label= element.first_level
                if element.checked
                  input.first-level__item-input(
                  type="radio",
                  name= element.name,
                  checked)
                else
                  input.first-level__item-input(
                    type="radio",
                    name= element.name)
              if element.second_level
                label.drop-down__list-select-all Выбрать все
                  input.drop-down__list-select-all-input(
                    type="checkbox",
                    name="select-all")
            if element.second_level
              ul.second-level
                each second_level_element in element.second_level
                  li.second-level__item
                    label.second-level__item-label= second_level_element.text
                      if second_level_element.checked
                        input.second-level__item-input(
                          type="radio",
                          name= element.name+"-second-level",
                          checked)
                      else
                        input.second-level__item-input(
                          type="radio",
                          name= element.name+"-second-level")

// Кнопка "Подробнее" со стрелкой
mixin more-btn-arrow(text, url, className)
  a(href= url, class= className ? className : "").more-btn-arrow
    p.more-btn-arrow__text= text
    img.more-btn-arrow__img.svg(src="@img/svg/arrow-right-thin.svg", alt="")

// Кнопка "Подробнее" с обводкой
mixin more-btn-border(text, url, className, speed)
  a(href= url, class= className ? className : "", data-speed= speed ? speed : "").more-btn-border= text

// Поиск
mixin search(text, className)
  form.search(role="search", class= className ? className : "")
    input.search-input(type="search", name="search" placeholder= text, required, minlength="4")
    button.search-btn
      img.search-btn__img.svg(src="@img/svg/search.svg", alt="Поиск")

// Навигация
mixin navigation(list)
  ul.navigation
    each element in list
      li.navigation__item
        a.navigation__item-link(href= element.url)= element.text

// Аккордеон
mixin accordion(list, className, navLinkClassName)
  ul.accordion(class= className ? className : "")
    each element in list
      li.accordion-item(class= element.active ? "accordion-item__active" : "")
        a.accordion-item__trigger(
          href= element.url,
          data-type= element.data_type ? element.data_type : "",
          data-target= element.target ? element.target : ""
          )= element.text
        if element.items
          ul.accordion-item__content
            each item in element.items
              li.accordion-item__content-item
                a.accordion-item__content-link(href= item.url, class= navLinkClassName ? navLinkClassName : "")= item.title

// Аккордеон с контентом
mixin accordion_content(list, className)
  ul.accordion.accordion_content(class= className ? className : "")
    each element, index in list
      li.accordion-item(class= element.active ? "accordion-item__active" : "")
        a.accordion-item__trigger(href='#')
          p.accordion-item__trigger-text= element.text
            span.accordion-item__trigger-number= index + 1
          .accordion-item__trigger-circle
            span
        if element.content
          .accordion-item__content !{element.content}

// Результаты поиска
mixin result(list, className, linkClass, paginationDataAttr, pageSize)
  .result(class= className ? className : "")
    .result-title
      span.result-title__description= list.title.description
      span.result-title__category= list.title.category
      if list.title.category_2
        span.result-title__category-2= list.title.category_2
    ul.result-list(data-pagination-content= paginationDataAttr, data-page-size= pageSize)
      each element in list.items
        if element.category == "Закон"
          li.result-item.result-item__law(data-type= paginationDataAttr ? "pagination-item" : "")
            .result-item__description
              p.result-item__description-text= element.description
              +more-btn-arrow("Читать подробнее", element.url, "result-item__description-more "+linkClass)
            p.result-item__category= element.category
            if element.category_2
              p.result-item__category-2= element.category_2
        else if element.category == "Справка"
          li.result-item.result-item__info(data-type= paginationDataAttr ? "pagination-item" : "")
            .result-item__description
              p.result-item__description-text= element.description
              +more-btn-arrow("Читать подробнее", element.url, "result-item__description-more "+linkClass)
            p.result-item__category= element.category
            if element.category_2
              p.result-item__category-2= element.category_2
        else
          li.result-item(data-type= paginationDataAttr ? "pagination-item" : "")
            .result-item__description
              p.result-item__description-text= element.description
              +more-btn-arrow("Читать подробнее", element.url, "result-item__description-more "+linkClass)
            p.result-item__category= element.category
            if element.category_2
              p.result-item__category-2= element.category_2

// Бегущая строка
mixin marquee(text, className)
  .marquee(class= className ? className : "")
    h1.marquee__text= text

// Кнопка "Вернуться назад"
mixin button-back(text, url, className)
  a.button-back(href= url, class= className ? className : "", data-type="js-btn-back")
    .button-back__circle
      img.button-back__circle-img.svg(src="@img/svg/pagination-arrow.svg", alt="Back")
    span.button-back__text= text

// Селектор даты
mixin datepicker(placeholder, className, id, datepicker_type, date_format)
  .filters-date(class= className ? className : "")
    input.filters-date__input(
      id= id,
      type="text",
      name="daterange",
      placeholder= placeholder,
      autocorrect="off",
      autocomplete="off",
      data-type="js-datepicker",
      data-datepicker-type= datepicker_type ? datepicker_type : "",
      data-date-format= date_format ? date_format : ""
    )
    label(for= id) 
      img.filters-date__img.svg(src="@img/svg/calendar.svg", alt="")